apiVersion: v1
kind: List

items:
  # Redis ConfigMap
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: redis-config
    data:
      redis.conf: |
        bind 0.0.0.0
        protected-mode no
        port 6379
        tcp-backlog 511
        timeout 0
        tcp-keepalive 300
        daemonize no
        supervised no
        loglevel notice
        logfile ""
        databases 16
        always-show-logo yes
        save ""
        appendonly no
        maxmemory 512mb
        maxmemory-policy allkeys-lru
        lazyfree-lazy-eviction yes
        lazyfree-lazy-expire yes
        lazyfree-lazy-server-del yes
        replica-lazy-flush yes
        lazyfree-lazy-user-del yes

  # Redis DaemonSet
  - apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: redis
    spec:
      selector:
        matchLabels:
          app: redis
      template:
        metadata:
          labels:
            app: redis
        spec:
          nodeSelector:
            kubernetes.io/hostname: fog-node-*
          containers:
          - name: redis
            image: redis:6.2-alpine
            ports:
            - containerPort: 6379
            command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
            volumeMounts:
            - name: config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
            resources:
              limits:
                memory: 768Mi
              requests:
                memory: 512Mi
          volumes:
          - name: config
            configMap:
              name: redis-config

  # Redis Service
  - apiVersion: v1
    kind: Service
    metadata:
      name: redis
    spec:
      selector:
        app: redis
      ports:
      - port: 6379
        targetPort: 6379

  # Redis Cluster Setup Job
  - apiVersion: batch/v1
    kind: Job
    metadata:
      name: redis-cluster-setup
    spec:
      template:
        metadata:
          name: redis-cluster-setup
        spec:
          restartPolicy: OnFailure
          containers:
          - name: redis-cluster-setup
            image: redis:6.2-alpine
            command: ["/bin/sh", "-c"]
            args:
            - |
              echo "Waiting for Redis instances to be ready..."
              until redis-cli -h redis ping; do
                echo "Waiting for Redis to be ready..."
                sleep 5
              done
              echo "All Redis instances are ready"
              
              echo "Getting Redis node IPs..."
              REDIS_NODES=$(kubectl get pods -l app=redis -o jsonpath='{range .items[*]}{.status.podIP}:6379 {end}')
              echo "Redis nodes: $REDIS_NODES"
              
              echo "Creating Redis Cluster..."
              redis-cli --cluster create $REDIS_NODES --cluster-replicas 1 --cluster-yes
              
              echo "Redis Cluster created successfully"
              echo "Cluster info:"
              redis-cli -h redis cluster info