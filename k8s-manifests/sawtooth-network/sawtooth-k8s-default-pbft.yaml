# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: List

items:

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: couchdb0-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: couchdb1-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: couchdb2-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: couchdb3-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: couchdb4-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

  # --------------------------=== pod 0 ===--------------------------

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: pbft-0
    spec:
      selector:
        matchLabels:
          name: pbft-0
      replicas: 1
      template:
        metadata:
          labels:
            name: pbft-0
        spec:
          nodeSelector:
            kubernetes.io/hostname: fogchain-node-1
          volumes:
            - name: couchdb-data
              persistentVolumeClaim:
                claimName: couchdb0-data
          containers:
            - name: sawtooth-intkey-tp-python
              image: hyperledger/sawtooth-intkey-tp-python:chime
              command:
                - bash
              args:
                - -c
                - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-pbft-engine
              image: hyperledger/sawtooth-pbft-engine:chime
              command:
                - bash
              args:
                - -c
                - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

            - name: sawtooth-rest-api
              image: hyperledger/sawtooth-rest-api:chime
              ports:
                - name: api
                  containerPort: 8008
              command:
                - bash
              args:
                - -c
                - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
              readinessProbe:
                httpGet:
                  path: /status
                  port: 8008
                initialDelaySeconds: 15
                periodSeconds: 10

            - name: sawtooth-settings-tp
              image: hyperledger/sawtooth-settings-tp:chime
              command:
                - bash
              args:
                - -c
                - "settings-tp -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-shell
              image: hyperledger/sawtooth-shell:chime
              command:
                - bash
              args:
                - -c
                - "sawtooth keygen && tail -f /dev/null"

            - name: sawtooth-validator
              image: hyperledger/sawtooth-validator:chime
              ports:
                - name: tp
                  containerPort: 4004
                - name: consensus
                  containerPort: 5050
                - name: validators
                  containerPort: 8800
              envFrom:
                - configMapRef:
                    name: keys-config
              command:
                - bash
              args:
                - -c
                - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft0priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft0pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  if [ ! -e /root/.sawtooth/keys/my_key.priv ]; then
                    sawtooth keygen my_key
                  fi &&
                  if [ ! -e config-genesis.batch ]; then
                    sawset genesis -k /root/.sawtooth/keys/my_key.priv -o config-genesis.batch
                  fi &&
                  sleep 30 &&
                  echo sawtooth.consensus.pbft.members=["\"$pbft0pub\",\"$pbft1pub\",\"$pbft2pub\",\"$pbft3pub\",\"$pbft4pub\""] &&
                  if [ ! -e config.batch ]; then
                    sawset proposal create \
                      -k /root/.sawtooth/keys/my_key.priv \
                      sawtooth.consensus.algorithm.name=pbft \
                      sawtooth.consensus.algorithm.version=1.0\
                      sawtooth.consensus.pbft.members=["\"$pbft0pub\",\"$pbft1pub\",\"$pbft2pub\",\"$pbft3pub\",\"$pbft4pub\""] \
                      sawtooth.publisher.max_batches_per_block=1200 \
                      -o config.batch
                  fi && \
                  if [ ! -e /var/lib/sawtooth/genesis.batch ]; then
                    sawadm genesis config-genesis.batch config.batch
                  fi &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000

            - name: couch-db-0
              image: couchdb:3
              env:
                - name: COUCHDB_USER
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_USER
                - name: COUCHDB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_PASSWORD
                - name: COUCHDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_SECRET
                - name: ERL_FLAGS
                  value: "-setcookie \"${ERLANG_COOKIE}\" -kernel inet_dist_listen_min 9100 -kernel inet_dist_listen_max 9200"
                - name: NODENAME
                  value: "couchdb0.local"
              ports:
                - containerPort: 5984
              volumeMounts:
                - name: couchdb-data
                  mountPath: /opt/couchdb/data

            - name: peer-registry-tp
              image: peer-registry-tp:local
              env:
                - name: MAX_UPDATES_PER_NODE
                  value: "100"
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

            - name: docker-image-tp
              image: docker-image-tp:local
              env:
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

  - apiVersion: v1
    kind: Service
    metadata:
      name: sawtooth-0
    spec:
      type: ClusterIP
      selector:
        name: pbft-0
      ports:
        - name: "4004"
          protocol: TCP
          port: 4004
          targetPort: 4004
        - name: "5050"
          protocol: TCP
          port: 5050
          targetPort: 5050
        - name: "8008"
          protocol: TCP
          port: 8008
          targetPort: 8008
        - name: "8080"
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: "8800"
          protocol: TCP
          port: 8800
          targetPort: 8800
        - name: "couchdb"
          port: 5984
          targetPort: 5984


  # --------------------------=== pod 1 ===--------------------------

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: pbft-1
    spec:
      selector:
        matchLabels:
          name: pbft-1
      replicas: 1
      template:
        metadata:
          labels:
            name: pbft-1
        spec:
          nodeSelector:
            kubernetes.io/hostname: fogchain-node-2
          volumes:
            - name: couchdb-data
              persistentVolumeClaim:
                claimName: couchdb1-data
          containers:
            - name: sawtooth-intkey-tp-python
              image: hyperledger/sawtooth-intkey-tp-python:chime
              command:
                - bash
              args:
                - -c
                - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-pbft-engine
              image: hyperledger/sawtooth-pbft-engine:chime
              command:
                - bash
              args:
                - -c
                - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

            - name: sawtooth-rest-api
              image: hyperledger/sawtooth-rest-api:chime
              ports:
                - name: api
                  containerPort: 8008
              command:
                - bash
              args:
                - -c
                - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
              readinessProbe:
                httpGet:
                  path: /status
                  port: 8008
                initialDelaySeconds: 15
                periodSeconds: 10

            - name: sawtooth-settings-tp
              image: hyperledger/sawtooth-settings-tp:chime
              command:
                - bash
              args:
                - -c
                - "settings-tp -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-shell
              image: hyperledger/sawtooth-shell:chime
              command:
                - bash
              args:
                - -c
                - "sawtooth keygen && tail -f /dev/null"

            - name: sawtooth-validator
              image: hyperledger/sawtooth-validator:chime
              ports:
                - name: tp
                  containerPort: 4004
                - name: consensus
                  containerPort: 5050
                - name: validators
                  containerPort: 8800
              env:
                - name: pbft1priv
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft1priv
                - name: pbft1pub
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft1pub
              command:
                - bash
              args:
                - -c
                - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft1priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft1pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_1_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800

            - name: couch-db-1
              image: couchdb:3
              env:
                - name: COUCHDB_USER
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_USER
                - name: COUCHDB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_PASSWORD
                - name: COUCHDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_SECRET
                - name: ERL_FLAGS
                  value: "-setcookie \"${ERLANG_COOKIE}\" -kernel inet_dist_listen_min 9100 -kernel inet_dist_listen_max 9200"
                - name: NODENAME
                  value: "couchdb1.local"
              ports:
                - containerPort: 5984
              volumeMounts:
                - name: couchdb-data
                  mountPath: /opt/couchdb/data

            - name: peer-registry-tp
              image: peer-registry-tp:local
              env:
                - name: MAX_UPDATES_PER_NODE
                  value: "100"
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

            - name: docker-image-tp
              image: docker-image-tp:local
              env:
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

  - apiVersion: v1
    kind: Service
    metadata:
      name: sawtooth-1
    spec:
      type: ClusterIP
      selector:
        name: pbft-1
      ports:
        - name: "4004"
          protocol: TCP
          port: 4004
          targetPort: 4004
        - name: "5050"
          protocol: TCP
          port: 5050
          targetPort: 5050
        - name: "8008"
          protocol: TCP
          port: 8008
          targetPort: 8008
        - name: "8080"
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: "8800"
          protocol: TCP
          port: 8800
          targetPort: 8800
        - name: "couchdb"
          port: 5984
          targetPort: 5984

  # --------------------------=== pod 2 ===--------------------------

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: pbft-2
    spec:
      selector:
        matchLabels:
          name: pbft-2
      replicas: 1
      template:
        metadata:
          labels:
            name: pbft-2
        spec:
          nodeSelector:
            kubernetes.io/hostname: fogchain-node-3
          volumes:
            - name: couchdb-data
              persistentVolumeClaim:
                claimName: couchdb2-data
          containers:
            - name: sawtooth-intkey-tp-python
              image: hyperledger/sawtooth-intkey-tp-python:chime
              command:
                - bash
              args:
                - -c
                - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-pbft-engine
              image: hyperledger/sawtooth-pbft-engine:chime
              command:
                - bash
              args:
                - -c
                - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

            - name: sawtooth-rest-api
              image: hyperledger/sawtooth-rest-api:chime
              ports:
                - name: api
                  containerPort: 8008
              command:
                - bash
              args:
                - -c
                - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
              readinessProbe:
                httpGet:
                  path: /status
                  port: 8008
                initialDelaySeconds: 30
                periodSeconds: 10

            - name: sawtooth-settings-tp
              image: hyperledger/sawtooth-settings-tp:chime
              command:
                - bash
              args:
                - -c
                - "settings-tp -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-shell
              image: hyperledger/sawtooth-shell:chime
              command:
                - bash
              args:
                - -c
                - "sawtooth keygen && tail -f /dev/null"

            - name: sawtooth-validator
              image: hyperledger/sawtooth-validator:chime
              ports:
                - name: tp
                  containerPort: 4004
                - name: consensus
                  containerPort: 5050
                - name: validators
                  containerPort: 8800
              env:
                - name: pbft2priv
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft2priv
                - name: pbft2pub
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft1pub
              command:
                - bash
              args:
                - -c
                - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft2priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft2pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_2_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_1_SERVICE_HOST:8800

            - name: couch-db-2
              image: couchdb:3
              env:
                - name: COUCHDB_USER
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_USER
                - name: COUCHDB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_PASSWORD
                - name: COUCHDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_SECRET
                - name: ERL_FLAGS
                  value: "-setcookie \"${ERLANG_COOKIE}\" -kernel inet_dist_listen_min 9100 -kernel inet_dist_listen_max 9200"
                - name: NODENAME
                  value: "couchdb2.local"
              ports:
                - containerPort: 5984
              volumeMounts:
                - name: couchdb-data
                  mountPath: /opt/couchdb/data

            - name: peer-registry-tp
              image: peer-registry-tp:local
              env:
                - name: MAX_UPDATES_PER_NODE
                  value: "100"
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

            - name: docker-image-tp
              image: docker-image-tp:local
              env:
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"



  - apiVersion: v1
    kind: Service
    metadata:
      name: sawtooth-2
    spec:
      type: ClusterIP
      selector:
        name: pbft-2
      ports:
        - name: "4004"
          protocol: TCP
          port: 4004
          targetPort: 4004
        - name: "5050"
          protocol: TCP
          port: 5050
          targetPort: 5050
        - name: "8008"
          protocol: TCP
          port: 8008
          targetPort: 8008
        - name: "8080"
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: "8800"
          protocol: TCP
          port: 8800
          targetPort: 8800
        - name: "couchdb"
          port: 5984
          targetPort: 5984


  # --------------------------=== pod 3 ===--------------------------

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: pbft-3
    spec:
      selector:
        matchLabels:
          name: pbft-3
      replicas: 1
      template:
        metadata:
          labels:
            name: pbft-3
        spec:
          nodeSelector:
            kubernetes.io/hostname: fogchain-node-4
          volumes:
            - name: couchdb-data
              persistentVolumeClaim:
                claimName: couchdb3-data
          containers:
            - name: sawtooth-intkey-tp-python
              image: hyperledger/sawtooth-intkey-tp-python:chime
              command:
                - bash
              args:
                - -c
                - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-pbft-engine
              image: hyperledger/sawtooth-pbft-engine:chime
              command:
                - bash
              args:
                - -c
                - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

            - name: sawtooth-rest-api
              image: hyperledger/sawtooth-rest-api:chime
              ports:
                - name: api
                  containerPort: 8008
              command:
                - bash
              args:
                - -c
                - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
              readinessProbe:
                httpGet:
                  path: /status
                  port: 8008
                initialDelaySeconds: 15
                periodSeconds: 10

            - name: sawtooth-settings-tp
              image: hyperledger/sawtooth-settings-tp:chime
              command:
                - bash
              args:
                - -c
                - "settings-tp -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-shell
              image: hyperledger/sawtooth-shell:chime
              command:
                - bash
              args:
                - -c
                - "sawtooth keygen && tail -f /dev/null"

            - name: sawtooth-validator
              image: hyperledger/sawtooth-validator:chime
              ports:
                - name: tp
                  containerPort: 4004
                - name: consensus
                  containerPort: 5050
                - name: validators
                  containerPort: 8800
              env:
                - name: pbft3priv
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft3priv
                - name: pbft3pub
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft3pub
              command:
                - bash
              args:
                - -c
                - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft3priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft3pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_3_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_1_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_2_SERVICE_HOST:8800

            - name: couch-db-3
              image: couchdb:3
              env:
                - name: COUCHDB_USER
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_USER
                - name: COUCHDB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_PASSWORD
                - name: COUCHDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_SECRET
                - name: ERL_FLAGS
                  value: "-setcookie \"${ERLANG_COOKIE}\" -kernel inet_dist_listen_min 9100 -kernel inet_dist_listen_max 9200"
                - name: NODENAME
                  value: "couchdb3.local"
              ports:
                - containerPort: 5984
              volumeMounts:
                - name: couchdb-data
                  mountPath: /opt/couchdb/data

            - name: peer-registry-tp
              image: peer-registry-tp:local
              env:
                - name: MAX_UPDATES_PER_NODE
                  value: "100"
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

            - name: docker-image-tp
              image: docker-image-tp:local
              env:
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

  - apiVersion: v1
    kind: Service
    metadata:
      name: sawtooth-3
    spec:
      type: ClusterIP
      selector:
        name: pbft-3
      ports:
        - name: "4004"
          protocol: TCP
          port: 4004
          targetPort: 4004
        - name: "5050"
          protocol: TCP
          port: 5050
          targetPort: 5050
        - name: "8008"
          protocol: TCP
          port: 8008
          targetPort: 8008
        - name: "8080"
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: "8800"
          protocol: TCP
          port: 8800
          targetPort: 8800
        - name: "couchdb"
          port: 5984
          targetPort: 5984


  # --------------------------=== pod 4 ===--------------------------

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: pbft-4
    spec:
      selector:
        matchLabels:
          name: pbft-4
      replicas: 1
      template:
        metadata:
          labels:
            name: pbft-4
        spec:
          nodeSelector:
            kubernetes.io/hostname: fogchain-node-5
          volumes:
            - name: couchdb-data
              persistentVolumeClaim:
                claimName: couchdb4-data
          containers:
            - name: sawtooth-intkey-tp-python
              image: hyperledger/sawtooth-intkey-tp-python:chime
              command:
                - bash
              args:
                - -c
                - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-pbft-engine
              image: hyperledger/sawtooth-pbft-engine:chime
              command:
                - bash
              args:
                - -c
                - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

            - name: sawtooth-rest-api
              image: hyperledger/sawtooth-rest-api:chime
              ports:
                - name: api
                  containerPort: 8008
              command:
                - bash
              args:
                - -c
                - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
              readinessProbe:
                httpGet:
                  path: /status
                  port: 8008
                initialDelaySeconds: 15
                periodSeconds: 10

            - name: sawtooth-settings-tp
              image: hyperledger/sawtooth-settings-tp:chime
              command:
                - bash
              args:
                - -c
                - "settings-tp -vv -C tcp://$HOSTNAME:4004"

            - name: sawtooth-shell
              image: hyperledger/sawtooth-shell:chime
              command:
                - bash
              args:
                - -c
                - "sawtooth keygen && tail -f /dev/null"

            - name: sawtooth-validator
              image: hyperledger/sawtooth-validator:chime
              ports:
                - name: tp
                  containerPort: 4004
                - name: consensus
                  containerPort: 5050
                - name: validators
                  containerPort: 8800
              env:
                - name: pbft4priv
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft4priv
                - name: pbft4pub
                  valueFrom:
                    configMapKeyRef:
                      name: keys-config
                      key: pbft4pub
              command:
                - bash
              args:
                - -c
                - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft4priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft4pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_4_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000 \
                    --peers tcp://$SAWTOOTH_0_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_1_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_2_SERVICE_HOST:8800 \
                    --peers tcp://$SAWTOOTH_3_SERVICE_HOST:8800

            - name: couch-db-4
              image: couchdb:3
              env:
                - name: COUCHDB_USER
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_USER
                - name: COUCHDB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_PASSWORD
                - name: COUCHDB_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_SECRET
                - name: ERL_FLAGS
                  value: "-setcookie \"${ERLANG_COOKIE}\" -kernel inet_dist_listen_min 9100 -kernel inet_dist_listen_max 9200"
                - name: NODENAME
                  value: "couchdb4.local"
              ports:
                - containerPort: 5984
              volumeMounts:
                - name: couchdb-data
                  mountPath: /opt/couchdb/data

            - name: peer-registry-tp
              image: peer-registry-tp:local
              env:
                - name: MAX_UPDATES_PER_NODE
                  value: "100"
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

            - name: docker-image-tp
              image: docker-image-tp:local
              env:
                - name: VALIDATOR_URL
                  value: "tcp://localhost:4004"

  - apiVersion: v1
    kind: Service
    metadata:
      name: sawtooth-4
    spec:
      type: ClusterIP
      selector:
        name: pbft-4
      ports:
        - name: "4004"
          protocol: TCP
          port: 4004
          targetPort: 4004
        - name: "5050"
          protocol: TCP
          port: 5050
          targetPort: 5050
        - name: "8008"
          protocol: TCP
          port: 8008
          targetPort: 8008
        - name: "8080"
          protocol: TCP
          port: 8080
          targetPort: 8080
        - name: "8800"
          protocol: TCP
          port: 8800
          targetPort: 8800
        - name: "couchdb"
          port: 5984
          targetPort: 5984

  # --------------------------=== CouchDB Setup Job ===----------------------
  - apiVersion: batch/v1
    kind: Job
    metadata:
      name: couchdb-setup
    spec:
      template:
        metadata:
          name: couchdb-setup
        spec:
          restartPolicy: OnFailure
          containers:
            - name: couchdb-setup
              image: curlimages/curl:latest
              command: [ "/bin/sh" ]
              args: ["-c", "curl -o couchdb-setup-entrypoint.sh https://github.com/murtazahr/Fogbusv3/blob/7b9ae0ee4a7d62ccca3927021fb6c11e50021d71/couchdb-setup-entrypoint.sh && chmod +x couchdb-setup-entrypoint.sh && ./couchdb-setup-entrypoint.sh"]
              env:
                - name: COUCHDB_USER
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_USER
                - name: COUCHDB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: couchdb-secrets
                      key: COUCHDB_PASSWORD

  # Add secret for couchDB credentials
  - apiVersion: v1
    kind: Secret
    metadata:
      name: couchdb-secrets
    type: Opaque
    stringData:
      COUCHDB_USER: fogbus
      COUCHDB_PASSWORD: mwg478jR04vAonMu2QnFYF3sVyVKUujYrGrzVsrq3I
      COUCHDB_SECRET: LEv+K7x24ITqcAYp0R0e1GzBqiE98oSSarPD1sdeOyM=
      ERLANG_COOKIE: jT7egojgnPLzOncq9MQU/zqwqHm6ZiPUU7xJfFLA8MA=